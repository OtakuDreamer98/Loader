-- WARNING: For educational use only

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- State variables
local aimbotEnabled = false
local raycastEnabled = true
local targetPart = "Head"
local fov = 100
local aimAtPlayers = true
local teamCheck = false
local aggression = 3
local fovColor = Color3.fromRGB(255, 255, 255)

-- FOV Circle Drawing
local fovCircle = Drawing.new("Circle")
fovCircle.Color = fovColor
fovCircle.Filled = false
fovCircle.Thickness = 2
fovCircle.NumSides = 100
fovCircle.Visible = false
fovCircle.Position = Camera.ViewportSize / 2
fovCircle.Radius = fov

-- GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "AimbotGUI"
gui.ResetOnSpawn = false
gui.Parent = game.CoreGui
gui.IgnoreGuiInset = true

-- Scale for responsiveness
local uiScale = Instance.new("UIScale", gui)
uiScale.Scale = 1

-- Main Frame
local frame = Instance.new("Frame", gui)
frame.Position = UDim2.new(0.5, -180, 0.5, -280) -- Centered horizontally and vertically (560/2 = 280)
frame.Size = UDim2.new(0, 360, 0, 560) -- Larger size for "big" appearance
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 45)
frame.BorderSizePixel = 0
frame.Visible = true -- GUI shows up by default
frame.ClipsDescendants = true

-- Add rounded corners
local frameCorner = Instance.new("UICorner", frame)
frameCorner.CornerRadius = UDim.new(0, 12)

-- Add gradient
local frameGradient = Instance.new("UIGradient", frame)
frameGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 45)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 40, 60))
})

-- Add shadow effect
local shadow = Instance.new("ImageLabel", frame)
shadow.Size = UDim2.new(1, 20, 1, 20)
shadow.Position = UDim2.new(0, -10, 0, -10)
shadow.Image = "rbxassetid://1316045217"
shadow.ImageTransparency = 0.6
shadow.BackgroundTransparency = 1
shadow.ZIndex = -1

-- Title
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 50)
title.Text = "âš™ Aimbot Control Panel"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundColor3 = Color3.fromRGB(15, 15, 35)
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextXAlignment = Enum.TextXAlignment.Center
local titleCorner = Instance.new("UICorner", title)
titleCorner.CornerRadius = UDim.new(0, 12)

-- Toggle Button (to show/hide GUI)
local toggleBtn = Instance.new("TextButton", gui)
toggleBtn.Size = UDim2.new(0, 100, 0, 40)
toggleBtn.Position = UDim2.new(0, 10, 0, 80) -- Adjusted Y offset from 10 to 50
toggleBtn.BackgroundColor3 = Color3.fromRGB(35, 35, 120)
toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 16
toggleBtn.Text = "Toggle GUI"
local toggleBtnCorner = Instance.new("UICorner", toggleBtn)
toggleBtnCorner.CornerRadius = UDim.new(0, 10)

-- Hover effect for toggle button
toggleBtn.MouseEnter:Connect(function()
    toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 150)
end)
toggleBtn.MouseLeave:Connect(function()
    toggleBtn.BackgroundColor3 = Color3.fromRGB(35, 35, 120)
end)

-- Close Button
local closeBtn = Instance.new("TextButton", frame)
closeBtn.Size = UDim2.new(0, 40, 0, 40)
closeBtn.Position = UDim2.new(1, -50, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 16
closeBtn.Text = "X"
local closeBtnCorner = Instance.new("UICorner", closeBtn)
closeBtnCorner.CornerRadius = UDim.new(0, 10)

-- Hover effect for close button
closeBtn.MouseEnter:Connect(function()
    closeBtn.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
end)
closeBtn.MouseLeave:Connect(function()
    closeBtn.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
end)

-- Toggle Helper Function
local function createToggle(name, posY, default, callback, tooltipText)
    local toggleFrame = Instance.new("Frame", frame)
    toggleFrame.Size = UDim2.new(1, -20, 0, 60)
    toggleFrame.Position = UDim2.new(0, 10, 0, posY)
    toggleFrame.BackgroundTransparency = 1

    local toggleLabel = Instance.new("TextLabel", toggleFrame)
    toggleLabel.Size = UDim2.new(0.7, 0, 0, 30)
    toggleLabel.Position = UDim2.new(0, 0, 0, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleLabel.Font = Enum.Font.Gotham
    toggleLabel.TextSize = 14
    toggleLabel.Text = name
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local toggle = Instance.new("TextButton", toggleFrame)
    toggle.Size = UDim2.new(0.2, 0, 0, 30)
    toggle.Position = UDim2.new(0.8, 0, 0, 0)
    toggle.BackgroundColor3 = default and Color3.fromRGB(60, 200, 60) or Color3.fromRGB(200, 60, 60)
    toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggle.Font = Enum.Font.Gotham
    toggle.TextSize = 12
    toggle.Text = default and "ON" or "OFF"
    local toggleCorner = Instance.new("UICorner", toggle)
    toggleCorner.CornerRadius = UDim.new(0, 15)

    local tooltip = Instance.new("TextLabel", toggleFrame)
    tooltip.Size = UDim2.new(1, 0, 0, 15)
    tooltip.Position = UDim2.new(0, 0, 0, 35)
    tooltip.BackgroundTransparency = 1
    tooltip.TextColor3 = Color3.fromRGB(180, 180, 180)
    tooltip.Font = Enum.Font.Gotham
    tooltip.TextSize = 10
    tooltip.Text = tooltipText
    tooltip.TextXAlignment = Enum.TextXAlignment.Left

    toggle.MouseButton1Click:Connect(function()
        default = not default
        toggle.Text = default and "ON" or "OFF"
        toggle.BackgroundColor3 = default and Color3.fromRGB(60, 200, 60) or Color3.fromRGB(200, 60, 60)
        callback(default)
    end)

    toggle.MouseEnter:Connect(function()
        toggle.BackgroundColor3 = default and Color3.fromRGB(80, 220, 80) or Color3.fromRGB(220, 80, 80)
    end)
    toggle.MouseLeave:Connect(function()
        toggle.BackgroundColor3 = default and Color3.fromRGB(60, 200, 60) or Color3.fromRGB(200, 60, 60)
    end)

    return toggle
end

-- Create Toggles (same positions)
createToggle("Aimbot", 60, false, function(on)
    aimbotEnabled = on
    fovCircle.Visible = on
end, "Enable/disable aimbot functionality")

createToggle("Raycast Check", 120, true, function(on)
    raycastEnabled = on
end, "Check for walls/obstacles")

createToggle("Aim at Players", 180, true, function(on)
    aimAtPlayers = on
end, "Target players instead of NPCs")

createToggle("Team Check", 240, false, function(on)
    teamCheck = on
end, "Avoid targeting teammates")

-- Target Part Toggle
local targetToggle = Instance.new("TextButton", frame)
targetToggle.Size = UDim2.new(1, -20, 0, 40)
targetToggle.Position = UDim2.new(0, 10, 0, 300)
targetToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 80)
targetToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
targetToggle.Font = Enum.Font.Gotham
targetToggle.TextSize = 14
targetToggle.Text = "Target Part: Head"
local targetToggleCorner = Instance.new("UICorner", targetToggle)
targetToggleCorner.CornerRadius = UDim.new(0, 10)
targetToggle.MouseButton1Click:Connect(function()
    targetPart = (targetPart == "Head") and "HumanoidRootPart" or "Head"
    targetToggle.Text = "Target Part: " .. targetPart
end)

-- Hover effect for target toggle
targetToggle.MouseEnter:Connect(function()
    targetToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 100)
end)
targetToggle.MouseLeave:Connect(function()
    targetToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 80)
end)

local targetTooltip = Instance.new("TextLabel", frame)
targetTooltip.Size = UDim2.new(1, -20, 0, 15)
targetTooltip.Position = UDim2.new(0, 10, 0, 345)
targetTooltip.BackgroundTransparency = 1
targetTooltip.TextColor3 = Color3.fromRGB(180, 180, 180)
targetTooltip.Font = Enum.Font.Gotham
targetTooltip.TextSize = 10
targetTooltip.Text = "Switch between head or body targeting"

-- FOV Input
local fovInput = Instance.new("TextBox", frame)
fovInput.Size = UDim2.new(1, -20, 0, 40)
fovInput.Position = UDim2.new(0, 10, 0, 360)
fovInput.BackgroundColor3 = Color3.fromRGB(40, 40, 80)
fovInput.TextColor3 = Color3.fromRGB(255, 255, 255)
fovInput.Font = Enum.Font.Gotham
fovInput.TextSize = 14
fovInput.Text = tostring(fov)
fovInput.PlaceholderText = "FOV Radius (10-500)"
local fovInputCorner = Instance.new("UICorner", fovInput)
fovInputCorner.CornerRadius = UDim.new(0, 10)
fovInput.FocusLost:Connect(function()
    local val = tonumber(fovInput.Text)
    if val then
        fov = math.clamp(val, 10, 500)
        fovInput.Text = tostring(fov)
        fovCircle.Radius = fov * (Camera.ViewportSize.Y / 1080)
    else
        fovInput.Text = tostring(fov)
    end
end)

-- FOV Color Selector
local colorDropdown = Instance.new("TextButton", frame)
colorDropdown.Size = UDim2.new(1, -20, 0, 40)
colorDropdown.Position = UDim2.new(0, 10, 0, 410)
colorDropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 80)
colorDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
colorDropdown.Font = Enum.Font.Gotham
colorDropdown.TextSize = 14
colorDropdown.Text = "FOV Color: White"
local colorDropdownCorner = Instance.new("UICorner", colorDropdown)
colorDropdownCorner.CornerRadius = UDim.new(0, 10)

local colors = {
    White = Color3.fromRGB(255, 255, 255),
    Red = Color3.fromRGB(255, 0, 0),
    Green = Color3.fromRGB(0, 255, 0),
    Blue = Color3.fromRGB(0, 0, 255),
    Purple = Color3.fromRGB(128, 0, 128)
}
local colorKeys = {"White", "Red", "Green", "Blue", "Purple"}
local colorIndex = 1

colorDropdown.MouseButton1Click:Connect(function()
    colorIndex = (colorIndex % #colorKeys) + 1
    local key = colorKeys[colorIndex]
    fovColor = colors[key]
    fovCircle.Color = fovColor
    colorDropdown.Text = "FOV Color: " .. key
end)

-- Hover effect for color dropdown
colorDropdown.MouseEnter:Connect(function()
    colorDropdown.BackgroundColor3 = Color3.fromRGB(60, 60, 100)
end)
colorDropdown.MouseLeave:Connect(function()
    colorDropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 80)
end)

-- Aggression Input
local aggressionInput = Instance.new("TextBox", frame)
aggressionInput.Size = UDim2.new(1, -20, 0, 40)
aggressionInput.Position = UDim2.new(0, 10, 0, 460)
aggressionInput.BackgroundColor3 = Color3.fromRGB(40, 40, 80)
aggressionInput.TextColor3 = Color3.fromRGB(255, 255, 255)
aggressionInput.Font = Enum.Font.Gotham
aggressionInput.TextSize = 14
aggressionInput.Text = tostring(aggression)
aggressionInput.PlaceholderText = "Aggression (0.1-5.0)"
local aggressionInputCorner = Instance.new("UICorner", aggressionInput)
aggressionInputCorner.CornerRadius = UDim.new(0, 10)
aggressionInput.FocusLost:Connect(function()
    local val = tonumber(aggressionInput.Text)
    if val then
        aggression = math.clamp(val, 0.1, 5)
        aggressionInput.Text = tostring(aggression)
    else
        aggressionInput.Text = tostring(aggression)
    end
end)

local aggressionTooltip = Instance.new("TextLabel", frame)
aggressionTooltip.Size = UDim2.new(1, -20, 0, 15)
aggressionTooltip.Position = UDim2.new(0, 10, 0, 505)
aggressionTooltip.BackgroundTransparency = 1
aggressionTooltip.TextColor3 = Color3.fromRGB(180, 180, 180)
aggressionTooltip.Font = Enum.Font.Gotham
aggressionTooltip.TextSize = 10
aggressionTooltip.Text = "Controls aimbot smoothness"

-- Responsive Design for Small Widths
local function adjustGuiForScreenSize()
    local viewportSize = Camera.ViewportSize.X
    if viewportSize <= 360 then
        uiScale.Scale = 0.7
        frame.Size = UDim2.new(0, 280, 0, 480) -- Adjusted for larger frame
        frame.Position = UDim2.new(0.5, -140, 0.5, -240) -- Centered (480/2 = 240)
        toggleBtn.Size = UDim2.new(0, 80, 0, 30)
        title.TextSize = 16
    elseif viewportSize <= 600 then
        uiScale.Scale = 0.85
        frame.Size = UDim2.new(0, 320, 0, 520) -- Adjusted for larger frame
        frame.Position = UDim2.new(0.5, -160, 0.5, -260) -- Centered (520/2 = 260)
        toggleBtn.Size = UDim2.new(0, 90, 0, 35)
        title.TextSize = 18
    else
        uiScale.Scale = 1
        frame.Size = UDim2.new(0, 360, 0, 560) -- Default larger size
        frame.Position = UDim2.new(0.5, -180, 0.5, -280) -- Default centered position
        toggleBtn.Size = UDim2.new(0, 100, 0, 40)
        title.TextSize = 20
    end
end

-- Initial adjustment and update on screen size change
adjustGuiForScreenSize()
Camera:GetPropertyChangedSignal("ViewportSize"):Connect(adjustGuiForScreenSize)

-- Draggable GUI
local dragging, dragInput, dragStart, startPos
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Toggle GUI Visibility with Fade Animation
local tweenService = game:GetService("TweenService")
local fadeInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
toggleBtn.MouseButton1Click:Connect(function()
    frame.Visible = not frame.Visible
    if frame.Visible then
        frame.BackgroundTransparency = 1
        local fadeIn = tweenService:Create(frame, fadeInfo, {BackgroundTransparency = 0})
        fadeIn:Play()
    end
end)

-- Close Button Functionality
closeBtn.MouseButton1Click:Connect(function()
    frame.Visible = false
end)

-- Targeting Logic
local function isValidTarget(char)
    if not char or not LocalPlayer.Character then return false end
    local part = char:FindFirstChild(targetPart)
    local hum = char:FindFirstChild("Humanoid")
    if not part or not hum or hum.Health <= 0 then return false end

    if aimAtPlayers then
        local plr = Players:GetPlayerFromCharacter(char)
        if not plr or plr == LocalPlayer then return false end
        if plr.Name == "Rip_kaizer87" then return false end
        if teamCheck and plr.Team == LocalPlayer.Team then return false end
    else
        if Players:GetPlayerFromCharacter(char) then return false end
    end
    return true
end

-- Raycast
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

local function getClosestTarget()
    local closest, minDist = nil, math.huge
    for _, char in ipairs(workspace:GetChildren()) do
        if isValidTarget(char) then
            local part = char:FindFirstChild(targetPart)
            local screenPos, visible = Camera:WorldToViewportPoint(part.Position)
            if visible and screenPos.Z > 0 then
                local dist = (Vector2.new(screenPos.X, screenPos.Y) - Camera.ViewportSize / 2).Magnitude
                if dist < fov and dist < minDist then
                    if raycastEnabled then
                        raycastParams.FilterDescendantsInstances = {LocalPlayer.Character or {}}
                        local ray = workspace:Raycast(Camera.CFrame.Position, (part.Position - Camera.CFrame.Position).Unit * 1000, raycastParams)
                        if ray and ray.Instance and ray.Instance:IsDescendantOf(char) then
                            minDist = dist
                            closest = part
                        end
                    else
                        minDist = dist
                        closest = part
                    end
                end
            end
        end
    end
    return closest
end

-- Aimbot Logic
RunService.RenderStepped:Connect(function()
    if not LocalPlayer.Character then return end
    fovCircle.Position = Camera.ViewportSize / 2 -- Fixed typo: fovCircleSwedish to fovCircle
    fovCircle.Radius = fov * (Camera.ViewportSize.Y / 1080)
    if not aimbotEnabled then return end
    local target = getClosestTarget()
    if target then
        local currentCF = Camera.CFrame
        local direction = (target.Position - currentCF.Position).Unit
        local newLook = currentCF.LookVector:Lerp(direction, math.clamp(aggression * 0.2, 0.05, 1))
        Camera.CFrame = CFrame.new(currentCF.Position, currentCF.Position + newLook)
    end
end)

-- Cleanup
game:GetService("Players").PlayerRemoving:Connect(function(player)
    if player == LocalPlayer then
        fovCircle:Remove()
        gui:Destroy()
    end
end)
